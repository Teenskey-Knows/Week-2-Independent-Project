* {
    font-family: Poppins,  Actor, Adamina;
    font-style:#FAFF00 ;
}



.top {
    background-image: url(./Images/moving\ 1.png);
    width: 100%;
    height: 100vh;
    background-repeat: no-repeat;
    background-size: cover;
    /* if background size=cover:image will be scaled to smallest size possible to fill the container(both height and width-if the prpns of the back.g differ from the element, the image is cropped either verticall/horizontally) */
    /* if bcg-size=contain:scales image as large as possible within its container without cropping or stretching the image-if the container>img it will result to image tiling unless the background-repeat property is set to no repeat */
    /* if bcg-size=auto:scales the bcg img in the corresponding direction such that its intrinsic prpns(width to heigh ratio) are maintained */
    position: relative;
    /* There are 5 position values: static, relative, fixed, absolute, sticky */
    /* Elements are then positioned using top,bottom,left and right.However,these properties will not work unless the position prpty is first set */
/* 1.Static-static positioned elements aren't affected by top,bottom,left & right prpties. It is not positioned in any special way;it's always positioned according to the normal flow of the page */
/* Relative positioning- acts like static but unlike static you can change the the top/bottom/right/left relative to where the element would normally be if it was statically positioned.
For instance, if place left, top or the four regions say, left;10px it would move 10px to the left. Normally you wouldn't use top, left, bottom and right with relative because it moves the element from where it normally would be making your work messy.*/

/* Absolute- mostly used with t,b,r & left. Absolute positioning removes the element from the document flow and if not specified where it should lie, it covers the underlying element  */

/* Fixed- f.p elements- are always fixed positioned based on entire html elements and stay in the same position when you scroll unlike absolute. */

/* Sticky-combination of relative and fixed position into one. As soon as the elements reaches the top of the page it sticks there also depending on where you place the r,l,b and top.*/

}

.nav-btn {
    position: relative;
    width: 900px;
    top: 70px;
    left: 500px;
    align-items:center ;
    display: flex;
    justify-content: space-around;
    /* Justify content defines the alignment along the main axis.By default it is flex-start which places items at the beginning of the main axis.
    Flex-end-causes items to be placed at the end of the main axis-furthest left.
    Center-content is placed at the center of the main axis.
    Space-between= the space is evenly split and added among the flex items.
    Space-around- similar to space between but there is space at both the beginning and end of the main axis. But the space at the beginning and end are half of the space in between the content.
    
    Space-evenly= space is evenly distributed through the main axis*/
}

.button {color: white;

}
.button1 { color: black;
    background-color: #FAFF00;
    padding: 2px 10px;
    border: none;
    border-radius:2px ;
}

.button2 {
    background-color: black;
    color: yellow;
    padding: 2px 5px;
    border: none;
}